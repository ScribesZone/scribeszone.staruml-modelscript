model Demo1

class Employee
attributes
  name : String
  age : Integer
  salary : Real
operations
  raiseSalary(amount : Real) : Real
end

class Department
attributes
  name : String
  location : String
  budget : Integer
end

class Project 
attributes
  name : String
  budget : Integer
end

association WorksIn between
  Employee[*]
  Department[1..*]
end

association WorksOn between
  Employee[*]
  Project[*]
end

associationclass Control between
  Department[1]
  Project[*]
attributes
  frequence : Integer
end



-- OCL constraints

constraints

context Department
  inv i1a: self.budget >= 0
  inv i2:  self.employee->size >= self.project->size

context Employee
  inv i1b: self.salary >= 0
  inv i3:  Employee.allInstances->forAll(e1, e2 |
            e1.project->size > e2.project->size implies e1.salary > e2.salary)

context Project
  inv i1c: self.budget >= 'a'
  inv i4:  self.budget <= self.department.budget
  inv i5:  self.department.employee->includesAll(self.employee)->size()='a'
